
IF(DEFINED CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of build, options are: Debug Release.")
ELSE()
    SET(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build, options are: Debug Release.")
ENDIF()

PROJECT(AISBeast)
CMAKE_MINIMUM_REQUIRED(VERSION 3.2.0)
SET(CMAKE_CONFIGURATION_TYPES Debug Release CACHE STRING INTERNAL FORCE)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

MESSAGE("Build tool: " ${CMAKE_BUILD_TOOL})

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

MESSAGE("Build target: " ${CMAKE_SYSTEM_NAME})
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    SET(MAC ON)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

IF(MAC)
    SET(BEAST_INCLUDE_DIRS "/usr/local/include" ${CMAKE_SOURCE_DIR})
    SET(BEAST_LIB_DIRS "/usr/local/lib")

    SET(CMAKE_XCODE_ATTRIBUTE_DEBUG_INFORMATION_FORMAT "dwarf-with-dsym" CACHE STRING "")
    SET(CMAKE_XCODE_ATTRIBUTE_MACOSX_DEPLOYMENT_TARGET "10.15" CACHE STRING "")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -march=native -mfpmath=sse -Wall ")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -O0 -Wall  -DDEBUG")
ENDIF(MAC)

INCLUDE_DIRECTORIES(${BEAST_INCLUDE_DIRS})
LINK_DIRECTORIES(${BEAST_LIB_DIRS})

SET(PROJ_FILES
    ${CMAKE_SOURCE_DIR}/README.md
    ${CMAKE_SOURCE_DIR}/.gitignore
)

add_custom_target(proj_files SOURCES ${PROJ_FILES})
set_source_files_properties(${PROJ_FILES} PROPERTIES HEADER_FILE_ONLY TRUE)

# projects
add_subdirectory("ais_decoder")
add_subdirectory("ais_reader")
